#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data.

#1. How many orders were placed in January?
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

#2. How many of those orders were for an iPhone?
SELECT Product, COUNT(orderid) AS Total
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID'
AND Product="iPhone";

#3. Select the customer account numbers for all the orders that were placed in February. 
SELECT DISTINCT BIT_DB.customers.acctnum
FROM BIT_DB.customers
INNER JOIN BIT_DB.FebSales
ON BIT_DB.customers.order_id=BIT_DB.FebSales.orderID
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

#4. Which product was the cheapest one sold in January, and what was the price?
SELECT DISTINCT MIN(price) AS Price, Product
FROM BIT_DB.JanSales
GROUP BY Price 
ORDER BY Price ASC LIMIT 1;

#5 What is the total revenue for each product sold in January? (Revenue can be calculated using the number of products sold and the price of the products).
SELECT Product, ROUND(SUM(Quantity*Price),2)AS TotalRevenue
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID'
GROUP BY Product;

#6 Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, quanity, SUM(quantity*price)AS TotalRevenue
FROM BIT_DB.FebSales
WHERE location="548 Lincoln St, Seattle, WA 98101"
GROUP BY product;

#7How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT COUNT(DISTINCT acctnum),ROUND(AVG(Quantity*Price),2)AS AVG_amount_spent
FROM BIT_DB.FebSales
LEFT JOIN BIT_DB.customers
ON customers.order_id=FebSales.orderID

#8 List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT DISTINCT Product, SUM(Quantity)
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP BY Product;
WHERE quantity>2
AND length(orderid) = 6
AND orderid <> 'Order ID';

#9 Which locations in New York received at least 3 orders in January, and how many orders did they each receive? (Hint: use HAVING).

SELECT DISTINCT location, count(orderID) AS TotalOrders
FROM BIT_DB.JanSales
WHERE location LIKE'%NY%'
AND length(orderid) = 6 
AND orderid <> 'Order ID'
GROUP BY location
HAVING count(orderID)>=3;

#10 How many of each type of headphone were sold in February?

SELECT Product, SUM(Quantity)
FROM BIT_DB.FebSales
WHERE Product like '%Headphones%'
GROUP By Product;

#11 What was the average amount spent per account in February?

SELECT ROUND(Sum(Quantity*price)/COUNT(customers.acctnum),2) AS AVG_spent
FROM BIT_DB.FebSales
INNER JOIN BIT_DB.customers
ON customers.order_id=FebSales.orderID
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';

#12 What was the average quantity of products purchased per account in February?

SELECT SUM(Quantity)/COUNT(customers.acctnum)AS AVG_quantity
FROM BIT_DB.FebSales
INNER JOIN BIT_DB.customers
ON FebSales.orderID=customers.order_id
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';

#13 Which product brought in the most revenue in January and how much revenue did it bring in total?

SELECT Product, SUM(Quantity*price)AS Total_Revenue
FROM BIT_DB.JanSales
GROUP BY Product
ORDER BY SUM(Quantity*price) desc LIMIT 1;
